import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import LabelEncoder
from sklearn.impute import SimpleImputer

# Load datasets
train_path = r"C:\Users\User\Downloads\processed_train.xlsx"
test_path = r"C:\Users\User\Downloads\data-crunch-round-1\test.xlsx"

train_df = pd.read_excel(train_path)
test_df = pd.read_excel(test_path)

# Encode categorical variables
categorical_columns = train_df.select_dtypes(include=["object"]).columns
for col in categorical_columns:
    le = LabelEncoder()
    train_df[col] = le.fit_transform(train_df[col].astype(str))
    test_df[col] = test_df[col].apply(lambda x: le.transform([x])[0] if x in le.classes_ else -1)

# Define targets & features
targets = ["Avg_Temperature", "Radiation", "Rain_Amount", "Wind_Speed", "Wind_Direction"]
features = [col for col in train_df.columns if col in test_df.columns and col not in ["ID"] + targets]

# Handle missing values
imputer = SimpleImputer(strategy="median")
train_df[features] = imputer.fit_transform(train_df[features])
test_df[features] = imputer.transform(test_df[features])

# Train Random Forest for each target
submission = pd.DataFrame({"ID": test_df["ID"]})
for target in targets:
    model = RandomForestRegressor(n_estimators=100, random_state=42)
    model.fit(train_df[features], train_df[target])
    submission[target] = model.predict(test_df[features])

# Save submission
submission.to_csv("submission_rf1.csv", index=False)
print("âœ… Submission saved as submission_rf1.csv")

